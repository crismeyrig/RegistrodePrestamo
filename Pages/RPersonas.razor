@page "/Personas"
@page "/Personas/{PersonaId:int}"




@inject IToastService toast



<EditForm Model="Persona" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Registro Personas</h3>
        </div>

        <div class="card-body">
            <form>
                @*Persona Id*@
                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>Persona Id</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="this.PersonaId" class="form-control" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-info input-group-text" style="z-index:0" @onclick="Buscar">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                                            <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                                        </svg>Buscar
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*Nombres*@
                <div class="form-group">
                    <label>Nombres</label>
                    <InputText @bind-Value="Persona.Nombres" class="form-control" />
                    <ValidationMessage For="(() => Persona.Nombres)" />
                </div>

                @*Cedula*@
                <div class="form-group">
                    <label>Cédula</label>
                    <InputText @bind-Value="Persona.Cedula" class="form-control" />
                    <ValidationMessage For="(() => Persona.Cedula)" />
                </div>

                @*Fecha de Nacimiento*@
                <div class="form-group">
                    <label>Fecha Nacimiento</label>
                    <InputDate @bind-Value="Persona.FechaNacimiento" class="form-control" />
                    <ValidationMessage For="(() => Persona.FechaNacimiento)" />
                </div>

                @*Telefono*@
                <div class="form-group">
                    <label>Teléfono</label>
                    <InputText @bind-Value="Persona.Telefono" class="form-control" />
                    <ValidationMessage For="(() => Persona.Telefono)" />
                </div>

                @*Direccion*@
                <div class="form-group">
                    <label>Dirección</label>
                    <InputText @bind-Value="Persona.Direccion" class="form-control" />
                    <ValidationMessage For="(() => Persona.Direccion)" />
                </div>

                @*Balance*@
                <div class="form-group">
                    <label>Balance</label>
                    <InputNumber @bind-Value="Persona.Balance" class="form-control" readonly />
                </div>
            </form>
        </div>

        <div class="card-footer">
            <div class="form-group text-center">
                <button type="button" class="btn btn-info" @onclick="Nuevo">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                        <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                    </svg>Nuevo
                </button>
                <button type="submit" class="btn btn-info">
                    
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-save2" viewBox="0 0 16 16">
                        <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9.5a1 1 0 0 0-1 1v4.5h2a.5.5 0 0 1 .354.854l-2.5 2.5a.5.5 0 0 1-.708 0l-2.5-2.5A.5.5 0 0 1 5.5 6.5h2V2a2 2 0 0 1 2-2H14a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2.5a.5.5 0 0 1 0 1H2z" />
                    </svg>Guardar
                </button>
                <button type="button" class="btn btn-info" @onclick="Eliminar">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                        <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                        <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                    </svg>Eliminar
                </button>
            </div>
        </div>

    </div>
</EditForm>


@code { [Inject]
    private PersonasBLL personasBLL { get; set; }

    [Parameter]
    public int PersonaId { get; set; }

    Personas Persona = new Personas();

    protected override void OnInitialized()
    {
        Nuevo();
    }

    public async void Buscar()
    {
        var registro = await personasBLL.Buscar(this.PersonaId);

        if (registro != null)
        {
            Persona = registro;

        }
        else
        {
            toast.ShowInfo("No se encontró el registro.");
        }
    }

    public void Nuevo()
    {
        Limpiar();
    }

    public async void Guardar()
    {
        Persona.PersonaId = this.PersonaId;//Esta linea la coloque porque esa propiedad de la entidad tenia 0 como valor.
        if (await personasBLL.Guardar(Persona))
        {

            toast.ShowSuccess("Guardado");
            Limpiar();

        }
        else
        {
            toast.ShowError("No se logró guardar el registro.");

        }
    }

    public async void Eliminar()
    {
        if (await personasBLL.Eliminar(this.PersonaId))
        {
            toast.ShowSuccess("Eliminado");
            Limpiar();
        }
        else
        {
            toast.ShowError("No se logró eliminar el registro.");

        }
    }

    public void Limpiar()
    {
        Persona = new Personas();
        this.PersonaId = 0;
    } }